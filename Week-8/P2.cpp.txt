#include <stdio.h>
#include <mpi.h>
#include <iostream>

#define BUFFER_SIZE 100

int main(int argc, char** argv) {
    int rank, size;
    MPI_Status status;
    int message_num = 0;
    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    if (rank == 0) {
        for (int i = 1; i < size; i++) {
            message_num = rand() % 10;
            MPI_Send(&message_num, BUFFER_SIZE, MPI_CHAR, i, 0, MPI_COMM_WORLD);
        }
    }
    else {
        MPI_Recv(&message_num, BUFFER_SIZE, MPI_CHAR, 0, 0, MPI_COMM_WORLD, &status);
        printf("Rank %d received message: %d\n", rank, message_num);
    }

    MPI_Finalize();
    return 0;
}
