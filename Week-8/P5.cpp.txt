#include <stdlib.h>
#include <stdio.h>
#include <mpi.h>
#include <math.h>

int is_prime(int n) {
	if (n < 2) {
		return 0;
	}
	int i;
	for (i = 2; i <= sqrt(n); i++) {
		if (n % i == 0) {
			return 0;
		}
	}
	return 1;
}

int main(int argc, char** argv) {
	int rank, size, i;
	int* array;

	MPI_Init(&argc, &argv);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	MPI_Comm_size(MPI_COMM_WORLD, &size);
	array = (int*)malloc(size * sizeof(int));
	if (rank == 0) {
		printf_s("The number of elements in the array = %d\n", size);
		printf_s("Enter the elements of the array: ");
		for (i = 0; i < size; i++) {
			fflush(stdout);
			scanf_s("%d", &array[i]);
		}
	}

	int num[1];
	MPI_Scatter(array, 1, MPI_INT, num, 1, MPI_INT, 0, MPI_COMM_WORLD);

	for (i = 0; i < 1; i++) {
		int result = is_prime(num[i]);
		printf_s("Process %d: %d is %s\n", rank, num[i], result ? "prime" : "not prime");
	}

	MPI_Finalize();
	return 0;
}